#include <cstdio>
#include <cstring>

int n, m, x, y, z;

struct Graph{
}e;

struct kruskal_tree{
	struct edge_normal{
		int now, to, val;
		bool operater< (edge_normal &b){
			return this -> val < b.val;	
		}
	}e_normal[M << 1];
	int ecnt_normal;

	inline void add_edge_normal(int now, int to, int val){
		ecnt_normal++;
		e_normal[ecnt_normal].now = now;
		e_normal[ecnt_normal].to = to;
		e_normal[ecnt_normal].val = val;
	}
	
	inline void init(){
		std::sort(e_normal + 1, e_normal + ecnt_normal + 1, cmp);
	}
}T;

int main(){
	scanf("%d%d", &n, &m);	
	for(int i = 1; i <= n; i++){
		scanf("%d%d%d", &x, &y, &z);					
		T.add_edge_normal(x, y, z);
		T.add_edge_normal(y, x, z);
	}
	T.init();
}
